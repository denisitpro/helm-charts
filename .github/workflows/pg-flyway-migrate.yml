name: publish pg-flyway-migrate

on:
  push:
    paths:
      - '**/*'  # only debug
#      - pg-flyway-migrate/version.txt

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mirror_folder: ['pg-flyway-migrate']


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract chart version
        id: vars
        run: |
          cd pg-flyway-migrate
          echo "CHART_VERSION=$(yq e '.chart' version.txt)" >> $GITHUB_ENV
          echo "FLYWAY_VERSION=$(yq e '.flywayImage' version.txt)" >> $GITHUB_ENV
          echo "POSTGRESQL_VERSION=$(yq e '.postgresql' version.txt)" >> $GITHUB_ENV
          echo "GIT_VERSION=$(yq e '.gitImage' version.txt)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Set chart version into Chart.yaml
        run: |
          yq e -i ".version = \"${CHART_VERSION}\"" "${{ matrix.mirror_folder }}/Chart.yaml"
          yq e -i ".appVersion = \"${FLYWAY_VERSION}\"" "${{ matrix.mirror_folder }}/Chart.yaml"
          cat "${{ matrix.mirror_folder }}/Chart.yaml"
#
#      - name: Set app versions in values.yaml
#        run: |
#          yq e -i ".flywayImage.tag = \"${CHART_VERSION}\"" pg-flyway-migrate/values.yaml
#          yq e -i ".postgresql.tag = \"${CHART_VERSION}\"" pg-flyway-migrate/values.yaml
#          yq e -i ".gitImage.tag = \"${CHART_VERSION}\"" pg-flyway-migrate/values.yaml
#
#      - name: Package Helm chart
#        run: |
#          helm package pg-flyway-migrate --destination .
#
#      - name: Login to OCI registry
#        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin registry-1.docker.io
#
#      - name: Push Helm chart to OCI
#        run: |
#          helm push pg-flyway-migrate-${CHART_VERSION}.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USER }}
#
#      - name: Create GitHub Release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: "pg-flyway-migrate-${{ env.CHART_VERSION }}"
#          name: "pg-flyway-migrate ${{ env.CHART_VERSION }}"
#          files: "pg-flyway-migrate-${{ env.CHART_VERSION }}.tgz"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}